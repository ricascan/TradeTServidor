package com.tradet.tradetservidor.hibernate;
// Generated 08-abr-2020 12:45:27 by Hibernate Tools 4.3.1


import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,catalog="tradet"
    , uniqueConstraints = {@UniqueConstraint(columnNames="EMAIL"), @UniqueConstraint(columnNames="NOMBRE"), @UniqueConstraint(columnNames="TELEFONO")} 
)
public class Usuario  implements java.io.Serializable {


     private Integer usuarioId;
     private String nombre;
     private String contrasena;
     private String email;
     private String telefono;
     private byte[] foto;
     private Set<Producto> productos = new HashSet<>(0);
     private Set<Valoracion> valoracionsForUsuarioValoradoId = new HashSet<>(0);
     private Set<Valoracion> valoracionsForUsuarioValoradorId = new HashSet<>(0);

    public Usuario() {
    }
    public Usuario(Integer usuarioId){
        this.usuarioId = usuarioId;
    }
	
    public Usuario(String nombre, String contrasena, String email, String telefono) {
        this.nombre = nombre;
        this.contrasena = contrasena;
        this.email = email;
        this.telefono = telefono;
    }
    public Usuario(String nombre, String contrasena, String email, String telefono, byte[] foto, Set<Producto> productos, Set<Valoracion> valoracionsForUsuarioValoradoId, Set<Valoracion> valoracionsForUsuarioValoradorId) {
       this.nombre = nombre;
       this.contrasena = contrasena;
       this.email = email;
       this.telefono = telefono;
       this.foto = foto;
       this.productos = productos;
       this.valoracionsForUsuarioValoradoId = valoracionsForUsuarioValoradoId;
       this.valoracionsForUsuarioValoradorId = valoracionsForUsuarioValoradorId;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="USUARIO_ID", unique=true)
    public Integer getUsuarioId() {
        return this.usuarioId;
    }
    
    public void setUsuarioId(Integer usuarioId) {
        this.usuarioId = usuarioId;
    }

    
    @Column(name="NOMBRE", unique=true, length=30)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    
    @Column(name="CONTRASENA", length=30)
    public String getContrasena() {
        return this.contrasena;
    }
    
    public void setContrasena(String contrasena) {
        this.contrasena = contrasena;
    }

    
    @Column(name="EMAIL", unique=true, length=40)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="TELEFONO", unique=true, length=9)
    public String getTelefono() {
        return this.telefono;
    }
    
    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    
    @Column(name="FOTO")
    public byte[] getFoto() {
        return this.foto;
    }
    
    public void setFoto(byte[] foto) {
        this.foto = foto;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<Producto> getProductos() {
        return this.productos;
    }
    
    public void setProductos(Set<Producto> productos) {
        this.productos = productos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuarioByUsuarioValoradoId")
    public Set<Valoracion> getValoracionsForUsuarioValoradoId() {
        return this.valoracionsForUsuarioValoradoId;
    }
    
    public void setValoracionsForUsuarioValoradoId(Set<Valoracion> valoracionsForUsuarioValoradoId) {
        this.valoracionsForUsuarioValoradoId = valoracionsForUsuarioValoradoId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuarioByUsuarioValoradorId")
    public Set<Valoracion> getValoracionsForUsuarioValoradorId() {
        return this.valoracionsForUsuarioValoradorId;
    }
    
    public void setValoracionsForUsuarioValoradorId(Set<Valoracion> valoracionsForUsuarioValoradorId) {
        this.valoracionsForUsuarioValoradorId = valoracionsForUsuarioValoradorId;
    }

    @Override
    public String toString() {
        return "Usuario{" + "usuarioId=" + usuarioId + ", nombre=" + nombre + ", contrasena=" + contrasena + ", email=" + email + ", telefono=" + telefono + ", foto=" + foto + '}';
    }

    public HashMap toHash(){
        HashMap map = new HashMap();
        map.put("id", usuarioId);
        map.put("nombre", nombre);
        map.put("contrasena", contrasena);
        map.put("email", email);
        map.put("telefono", telefono);
        map.put("foto", foto);
        return map;
    }

    public Usuario (HashMap map){
        if(map.containsKey("id")){
            usuarioId = (Integer) map.get("id");
        }else{
            usuarioId = null;
        }
        nombre = (String) map.get("nombre");
        contrasena = (String) map.get("contrasena");
        email = (String) map.get("email");
        telefono = (String) map.get("telefono");
        foto = (byte[]) map.get("foto");
    }


}


