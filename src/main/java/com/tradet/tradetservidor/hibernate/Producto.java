package com.tradet.tradetservidor.hibernate;
// Generated 08-abr-2020 12:45:27 by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.HashMap;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Producto generated by hbm2java
 */
@Entity
@Table(name = "producto",
        catalog = "tradet",
        uniqueConstraints = @UniqueConstraint(columnNames = "NOMBRE")
)
public class Producto implements java.io.Serializable {

    private Integer productoId;
    private Categoria categoria;
    private Usuario usuario;
    private String nombre;
    private String descripcion;
    private BigDecimal precio;
    private double latitud;
    private double longitud;
    private byte[] foto;
    private String estado;

    public Producto() {
    }

    public Producto(Integer productoId) {
        this.productoId = productoId;
    }

    public Producto(String nombre, String descripcion, BigDecimal precio, double latitud, double longitud, byte[] foto, String estado, Usuario usuario, Categoria categoria) {
        this.categoria = categoria;
        this.usuario = usuario;
        this.nombre = nombre;
        this.descripcion = descripcion;
        this.precio = precio;
        this.latitud = latitud;
        this.longitud = longitud;
        this.foto = foto;
        this.estado = estado;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "PRODUCTO_ID", nullable = false)
    public Integer getProductoId() {
        return this.productoId;
    }

    public void setProductoId(Integer productoId) {
        this.productoId = productoId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "CATEGORIA_ID")
    public Categoria getCategoria() {
        return this.categoria;
    }

    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "USUARIO_ID")
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Column(name = "NOMBRE", unique = true, length = 30)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "DESCRIPCION", length = 1000)
    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    @Column(name = "PRECIO", precision = 9)
    public BigDecimal getPrecio() {
        return this.precio;
    }

    public void setPrecio(BigDecimal precio) {
        this.precio = precio;
    }

    @Column(name = "LATITUD", precision = 9, scale = 6)
    public double getLatitud() {
        return this.latitud;
    }

    public void setLatitud(double latitud) {
        this.latitud = latitud;
    }

    @Column(name = "LONGITUD", precision = 9, scale = 6)
    public double getLongitud() {
        return this.longitud;
    }

    public void setLongitud(double longitud) {
        this.longitud = longitud;
    }

    @Column(name = "FOTO")
    public byte[] getFoto() {
        return this.foto;
    }

    public void setFoto(byte[] foto) {
        this.foto = foto;
    }

    @Column(name = "ESTADO", length = 20)
    public String getEstado() {
        return this.estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    @Override
    public String toString() {
        return "Producto{" + "productoId=" + productoId + ", categoria=" + categoria + ", usuario=" + usuario + ", nombre=" + nombre + ", descripcion=" + descripcion + ", precio=" + precio + ", latitud=" + latitud + ", longitud=" + longitud + ", foto=" + foto + ", estado=" + estado + '}';
    }

    public Producto(HashMap map) {
        if(map.containsKey("id"))
            productoId = ((Integer) map.get("id"));
        else
            productoId = null;
        nombre = ((String) map.get("nombre"));
        descripcion = ((String) map.get("descripcion"));
        precio = ((BigDecimal) map.get("precio"));
        latitud = ((Double) map.get("latitud"));
        longitud = ((Double) map.get("longitud"));
        foto = ((byte[]) map.get("foto"));
        estado = ((String) map.get("estado"));
        usuario = (new Usuario((Integer)((HashMap)map.get("usuario")).get("id")));
        categoria = (new Categoria((Integer)((HashMap)map.get("categoria")).get("id")));
    }

    public HashMap toHash() {
        HashMap map = new HashMap();
        map.put("id", productoId);
        map.put("nombre", nombre);
        map.put("descripcion", descripcion);
        map.put("precio", precio);
        map.put("latitud", latitud);
        map.put("longitud", longitud);
        map.put("foto", foto);
        map.put("estado", estado);
        map.put("usuario", usuario.toHash());
        map.put("categoria", categoria.toHash());
        return map;
    }

}
