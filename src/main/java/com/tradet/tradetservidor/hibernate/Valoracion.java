package com.tradet.tradetservidor.hibernate;
// Generated 08-abr-2020 12:45:27 by Hibernate Tools 4.3.1

import java.util.HashMap;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Valoracion generated by hbm2java
 */
@Entity
@Table(name = "valoracion",
        catalog = "tradet"
)
public class Valoracion implements java.io.Serializable {

    private ValoracionId id;
    private Usuario usuarioByUsuarioValoradoId;
    private Usuario usuarioByUsuarioValoradorId;
    private int puntuacion;
    private String comentario;

    public Valoracion() {
    }

    public Valoracion(ValoracionId id) {
        this.id = id;
    }

    public Valoracion(ValoracionId id, Usuario usuarioByUsuarioValoradoId, Usuario usuarioByUsuarioValoradorId, int puntuacion) {
        this.id = id;
        this.usuarioByUsuarioValoradoId = usuarioByUsuarioValoradoId;
        this.usuarioByUsuarioValoradorId = usuarioByUsuarioValoradorId;
        this.puntuacion = puntuacion;
    }

    public Valoracion(ValoracionId id, Usuario usuarioByUsuarioValoradoId, Usuario usuarioByUsuarioValoradorId, int puntuacion, String comentario) {
        this.id = id;
        this.usuarioByUsuarioValoradoId = usuarioByUsuarioValoradoId;
        this.usuarioByUsuarioValoradorId = usuarioByUsuarioValoradorId;
        this.puntuacion = puntuacion;
        this.comentario = comentario;
    }

    @EmbeddedId

    @AttributeOverrides({
        @AttributeOverride(name = "usuarioValoradoId", column = @Column(name = "USUARIO_VALORADO_ID")),
        @AttributeOverride(name = "usuarioValoradorId", column = @Column(name = "USUARIO_VALORADOR_ID"))})
    public ValoracionId getId() {
        return this.id;
    }

    public void setId(ValoracionId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "USUARIO_VALORADO_ID", insertable = false, updatable = false)
    public Usuario getUsuarioByUsuarioValoradoId() {
        return this.usuarioByUsuarioValoradoId;
    }

    public void setUsuarioByUsuarioValoradoId(Usuario usuarioByUsuarioValoradoId) {
        this.usuarioByUsuarioValoradoId = usuarioByUsuarioValoradoId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "USUARIO_VALORADOR_ID", insertable = false, updatable = false)
    public Usuario getUsuarioByUsuarioValoradorId() {
        return this.usuarioByUsuarioValoradorId;
    }

    public void setUsuarioByUsuarioValoradorId(Usuario usuarioByUsuarioValoradorId) {
        this.usuarioByUsuarioValoradorId = usuarioByUsuarioValoradorId;
    }

    @Column(name = "PUNTUACION")
    public int getPuntuacion() {
        return this.puntuacion;
    }

    public void setPuntuacion(int puntuacion) {
        this.puntuacion = puntuacion;
    }

    @Column(name = "COMENTARIO", length = 100)
    public String getComentario() {
        return this.comentario;
    }

    public void setComentario(String comentario) {
        this.comentario = comentario;
    }

    @Override
    public String toString() {
        return "Valoracion{" + "id=" + id + ", usuarioByUsuarioValoradoId=" + usuarioByUsuarioValoradoId + ", usuarioByUsuarioValoradorId=" + usuarioByUsuarioValoradorId + ", puntuacion=" + puntuacion + ", comentario=" + comentario + '}';
    }

    public Valoracion(HashMap map) {
        id = (new ValoracionId((Integer)((HashMap)map.get("usuario valorado")).get("id"), (Integer)((HashMap)map.get("usuario valorador")).get("id")));
        usuarioByUsuarioValoradoId = (new Usuario((Integer)((HashMap)map.get("usuario valorado")).get("id")));
        usuarioByUsuarioValoradorId = (new Usuario((Integer)((HashMap)map.get("usuario valorador")).get("id")));
        puntuacion = ((Integer) map.get("puntuacion"));
        comentario = ((String) map.get("comentario"));
    }

    public HashMap toHash() {
        HashMap map = new HashMap();
        map.put("usuario valorado", usuarioByUsuarioValoradoId.toHash());
        map.put("usuario valorador", usuarioByUsuarioValoradorId.toHash());
        map.put("puntuacion", puntuacion);
        map.put("comentario", comentario);
        return map;
    }

}
